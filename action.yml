name: GitLab flow action for tenant bootstrap repositories
description: Action for provisioning and destroying clusters, updating and synchronizing releases, and managing project dependencies.

inputs:
  github_token_repo_full_access:
    description: GitHub token with full access permissions to repositories (used by installer script and RMK).
    required: true
  allowed_environments:
    description: Allowed environments participating in releases for RMK commands "destroy", "helmfile_validate", "project_update", "provision", "release_sync", "release_update".
    required: true
    default: develop,staging
  cluster_provider_credentials:
    description: |
      Credentials in JSON format for different environments and cluster providers.
      Example:
      cluster_provider_credentials: |
        {
            "develop": {
                "cluster_providers": {
                    "aws": {
                        "AWS_ACCESS_KEY_ID": "same_str",
                        "AWS_SECRET_ACCESS_KEY": "same_str",
                        "AWS_REGION": "same_str"
                    },
                    "azure": {
                        "AZURE_CLIENT_ID": "same_str",
                        "AZURE_CLIENT_SECRET": "same_str",
                        "AZURE_LOCATION": "same_str",
                        "AZURE_SUBSCRIPTION_ID": "same_str",
                        "AZURE_TENANT_ID": "same_str"
                    },
                    "gcp": {
                        "GOOGLE_APPLICATION_CREDENTIALS": {json_content},
                        "GCP_REGION": "same_str"
                    }
                }
            },
            "production": {
                "cluster_providers": {
                    "aws": {
                        "AWS_ACCESS_KEY_ID": "same_str",
                        "AWS_SECRET_ACCESS_KEY": "same_str",
                        "AWS_REGION": "same_str"
                    },
                    "azure": {
                        "AZURE_CLIENT_ID": "same_str",
                        "AZURE_CLIENT_SECRET": "same_str",
                        "AZURE_LOCATION": "same_str",
                        "AZURE_SUBSCRIPTION_ID": "same_str",
                        "AZURE_TENANT_ID": "same_str"
                    },
                    "gcp": {
                        "GOOGLE_APPLICATION_CREDENTIALS": {json_content},
                        "GCP_REGION": "same_str"
                    }
                }
            },
            "staging": {
                "cluster_providers": {
                    "aws": {
                        "AWS_ACCESS_KEY_ID": "same_str",
                        "AWS_SECRET_ACCESS_KEY": "same_str",
                        "AWS_REGION": "same_str"
                    },
                    "azure": {
                        "AZURE_CLIENT_ID": "same_str",
                        "AZURE_CLIENT_SECRET": "same_str",
                        "AZURE_LOCATION": "same_str",
                        "AZURE_SUBSCRIPTION_ID": "same_str",
                        "AZURE_TENANT_ID": "same_str"
                    },
                    "gcp": {
                        "GOOGLE_APPLICATION_CREDENTIALS": {json_content},
                        "GCP_REGION": "same_str"
                    }
                }
            }
        }
    required: true
  rmk_cluster_provider:
    description: "Specify cluster provider: aws, azure, gcp."
    required: true
    default: aws
  rmk_version:
    description: RMK version.
    required: false
    default: latest
  rmk_download_url:
    description: |
      URL of the download script for RMK installation.
      Example:
        rmk_download_url: https://edenlabllc-rmk.s3.eu-north-1.amazonaws.com/rmk/s3-installer
    required: false
    default: https://edenlabllc-rmk.s3.eu-north-1.amazonaws.com/rmk/s3-installer
  rmk_slack_notifications:
    description: Enable slack notifications.
    required: false
    default: false
  rmk_slack_webhook:
    description: Url for slack webhook (required if rmk_slack_notifications=true).
    required: false
    default: ""
  rmk_slack_channel:
    description: Channel name for slack notification (required if rmk_slack_notifications=true).
    required: false
    default: ""
  rmk_slack_message_details:
    description: |
      Additional information in the body of the slack message (only if rmk_slack_notifications=true).
      Example:
      rmk_slack_message_details: |
        GitHub Action Url: ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}
        Build Number: ${GITHUB_RUN_NUMBER}
    required: false
    default: ""
  rmk_command:
    description: Command to run CD in RMK. Allowed values are "destroy", "helmfile_validate", "project_update", "provision", "release_sync", "release_update".
    required: false
  rmk_update_skip_deploy:
    description: Whether to skip deploy and commit only when running release update in RMK (only if rmk_command=release_update).
    required: false
    default: false
  rmk_sync_labels:
    description: |
      List of labels when running sync in RMK (only if rmk_command=release_sync).
      Example:
      rmk_sync_labels: |
        scope=kodjin
        app=fhir-server-api
    required: false
    default: ""
  rmk_release_repository_full_name:
    description: Image repository full name of application (includes registry URL and repository_name, only if rmk_command=release_update).
    required: false
  rmk_release_version:
    description: Current application version (only if rmk_command=release_update).
    required: false
  rmk_project_dependency_name:
    description: Dependency name. Allows using a set of rmk commands to project dependency version update to project.yaml file (only if rmk_command=project_update).
    required: false
  rmk_project_dependency_version:
    description: Dependency version. Allows using a set of rmk commands to project dependency version update to project.yaml file (only if rmk_command=project_update).
    required: false
outputs:
  git_branch:
    description: Git branch.
  repository_full_name:
    description: Image repository full name of application (includes registry URL and repository_name).
  version:
    description: Current application version.
  environment:
    description: Current CD environment.
runs:
  using: composite
  steps:
    - name: Install python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install python dependencies
      run: pip install -r ${{ github.action_path }}/requirements.txt
      shell: bash

    - name: Execute main script
      id: main
      run: python ${{ github.action_path }}/main.py
      shell: bash
      env:
        INPUT_GITHUB_TOKEN_REPO_FULL_ACCESS: ${{ inputs.github_token_repo_full_access }}
        INPUT_ALLOWED_ENVIRONMENTS: ${{ inputs.allowed_environments }}
        INPUT_CLUSTER_PROVIDER_CREDENTIALS: ${{ inputs.cluster_provider_credentials }}
        INPUT_RMK_CLUSTER_PROVIDER: ${{ inputs.rmk_cluster_provider }}
        INPUT_RMK_VERSION: ${{ inputs.rmk_version }}
        INPUT_RMK_DOWNLOAD_URL: ${{ inputs.rmk_download_url }}
        INPUT_RMK_SLACK_NOTIFICATIONS: ${{ inputs.rmk_slack_notifications }}
        INPUT_RMK_SLACK_WEBHOOK: ${{ inputs.rmk_slack_webhook }}
        INPUT_RMK_SLACK_CHANNEL: ${{ inputs.rmk_slack_channel }}
        INPUT_RMK_SLACK_MESSAGE_DETAILS: ${{ inputs.rmk_slack_message_details }}
        INPUT_RMK_COMMAND: ${{ inputs.rmk_command }}
        INPUT_RMK_UPDATE_SKIP_DEPLOY: ${{ inputs.rmk_update_skip_deploy }}
        INPUT_RMK_SYNC_LABELS: ${{ inputs.rmk_sync_labels }}
        INPUT_RMK_RELEASE_REPOSITORY_FULL_NAME: ${{ inputs.rmk_release_repository_full_name }}
        INPUT_RMK_RELEASE_VERSION: ${{ inputs.rmk_release_version }}
        INPUT_RMK_PROJECT_DEPENDENCY_NAME: ${{ inputs.rmk_project_dependency_name }}
        INPUT_RMK_PROJECT_DEPENDENCY_VERSION: ${{ inputs.rmk_project_dependency_version }}
